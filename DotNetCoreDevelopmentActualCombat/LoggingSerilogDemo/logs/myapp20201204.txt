{"@t":"2020-12-04T07:51:50.0922647Z","@mt":"Starting web host"}
{"@t":"2020-12-04T07:51:51.1551307Z","@mt":"Hosting starting","@l":"Debug","EventId":{"Id":1},"SourceContext":"Microsoft.Extensions.Hosting.Internal.Host"}
{"@t":"2020-12-04T07:51:51.2935200Z","@mt":"Failed to locate the development https certificate at '{certificatePath}'.","@l":"Debug","certificatePath":null,"EventId":{"Id":2,"Name":"FailedToLocateDevelopmentCertificateFile"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer"}
{"@t":"2020-12-04T07:51:52.1675994Z","@mt":"Using development certificate: {certificateSubjectName} (Thumbprint: {certificateThumbprint})","@l":"Debug","certificateSubjectName":"CN=localhost","certificateThumbprint":"B75C04C28BE608FCE8CAEB63B6C34D05FD05B9FF","EventId":{"Name":"LocatedDevelopmentCertificate"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer"}
{"@t":"2020-12-04T07:51:52.2043973Z","@mt":"Now listening on: {address}","address":"https://localhost:5001","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-12-04T07:51:52.2045366Z","@mt":"Now listening on: {address}","address":"http://localhost:5000","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-12-04T07:51:52.2048534Z","@mt":"Loaded hosting startup assembly {assemblyName}","@l":"Debug","assemblyName":"LoggingSerilogDemo","SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics"}
{"@t":"2020-12-04T07:51:52.2050798Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-12-04T07:51:52.2051512Z","@mt":"Hosting environment: {envName}","envName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-12-04T07:51:52.2052452Z","@mt":"Content root path: {contentRoot}","contentRoot":"C:\\Users\\ML\\source\\repos\\Personal-Learning-Library\\DotNetCoreDevelopmentActualCombat\\LoggingSerilogDemo","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-12-04T07:51:52.2053990Z","@mt":"Hosting started","@l":"Debug","EventId":{"Id":2},"SourceContext":"Microsoft.Extensions.Hosting.Internal.Host"}
{"@t":"2020-12-04T07:51:52.6892392Z","@mt":"Connection id \"{ConnectionId}\" accepted.","@l":"Debug","ConnectionId":"0HM4O55RCH1FA","EventId":{"Id":39,"Name":"ConnectionAccepted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T07:51:52.6892391Z","@mt":"Connection id \"{ConnectionId}\" accepted.","@l":"Debug","ConnectionId":"0HM4O55RCH1F9","EventId":{"Id":39,"Name":"ConnectionAccepted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T07:51:52.6947466Z","@mt":"Connection id \"{ConnectionId}\" started.","@l":"Debug","ConnectionId":"0HM4O55RCH1FA","EventId":{"Id":1,"Name":"ConnectionStart"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T07:51:52.6947466Z","@mt":"Connection id \"{ConnectionId}\" started.","@l":"Debug","ConnectionId":"0HM4O55RCH1F9","EventId":{"Id":1,"Name":"ConnectionStart"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T07:51:52.7052025Z","@mt":"Connection id \"{ConnectionId}\" received FIN.","@l":"Debug","ConnectionId":"0HM4O55RCH1FA","EventId":{"Id":6,"Name":"ConnectionReadFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-12-04T07:51:52.7052002Z","@mt":"Connection id \"{ConnectionId}\" received FIN.","@l":"Debug","ConnectionId":"0HM4O55RCH1F9","EventId":{"Id":6,"Name":"ConnectionReadFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-12-04T07:51:52.7202623Z","@mt":"Failed to authenticate HTTPS connection.","@l":"Debug","@x":"System.IO.IOException: Authentication failed because the remote party has closed the transport stream.\r\n   at System.Net.Security.SslStream.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessAuthentication(LazyAsyncResult lazyResult, CancellationToken cancellationToken)\r\n   at System.Net.Security.SslStream.BeginAuthenticateAsServer(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken, AsyncCallback asyncCallback, Object asyncState)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__69_0(SslServerAuthenticationOptions arg1, CancellationToken arg2, AsyncCallback callback, Object state)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\r\n   at System.Net.Security.SslStream.AuthenticateAsServerAsync(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.InnerOnConnectionAsync(ConnectionContext context)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware","ConnectionId":"0HM4O55RCH1FA"}
{"@t":"2020-12-04T07:51:52.7202623Z","@mt":"Failed to authenticate HTTPS connection.","@l":"Debug","@x":"System.IO.IOException: Authentication failed because the remote party has closed the transport stream.\r\n   at System.Net.Security.SslStream.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessAuthentication(LazyAsyncResult lazyResult, CancellationToken cancellationToken)\r\n   at System.Net.Security.SslStream.BeginAuthenticateAsServer(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken, AsyncCallback asyncCallback, Object asyncState)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__69_0(SslServerAuthenticationOptions arg1, CancellationToken arg2, AsyncCallback callback, Object state)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\r\n   at System.Net.Security.SslStream.AuthenticateAsServerAsync(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.InnerOnConnectionAsync(ConnectionContext context)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware","ConnectionId":"0HM4O55RCH1F9"}
{"@t":"2020-12-04T07:51:52.7646106Z","@mt":"Connection id \"{ConnectionId}\" stopped.","@l":"Debug","ConnectionId":"0HM4O55RCH1FA","EventId":{"Id":2,"Name":"ConnectionStop"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T07:51:52.7646106Z","@mt":"Connection id \"{ConnectionId}\" stopped.","@l":"Debug","ConnectionId":"0HM4O55RCH1F9","EventId":{"Id":2,"Name":"ConnectionStop"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T07:51:52.7664750Z","@mt":"Connection id \"{ConnectionId}\" sending FIN because: \"{Reason}\"","@l":"Debug","ConnectionId":"0HM4O55RCH1FA","Reason":"The Socket transport's send loop completed gracefully.","EventId":{"Id":7,"Name":"ConnectionWriteFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-12-04T07:51:52.7664780Z","@mt":"Connection id \"{ConnectionId}\" sending FIN because: \"{Reason}\"","@l":"Debug","ConnectionId":"0HM4O55RCH1F9","Reason":"The Socket transport's send loop completed gracefully.","EventId":{"Id":7,"Name":"ConnectionWriteFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-12-04T07:51:52.9433929Z","@mt":"Connection id \"{ConnectionId}\" accepted.","@l":"Debug","ConnectionId":"0HM4O55RCH1FB","EventId":{"Id":39,"Name":"ConnectionAccepted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T07:51:52.9452293Z","@mt":"Connection id \"{ConnectionId}\" started.","@l":"Debug","ConnectionId":"0HM4O55RCH1FB","EventId":{"Id":1,"Name":"ConnectionStart"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T07:51:53.0528227Z","@mt":"{HostingRequestStartingLog:l}","@r":["Request starting HTTP/2 GET https://localhost:5001/weatherforecast  "],"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5001","PathBase":"","Path":"/weatherforecast","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:5001/weatherforecast  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.0578129Z","@mt":"Wildcard detected, all requests with hosts will be allowed.","@l":"Debug","EventId":{"Name":"WildcardDetected"},"SourceContext":"Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.0848993Z","@mt":"{CandidateCount} candidate(s) found for the request path '{Path}'","@l":"Debug","CandidateCount":1,"Path":"/weatherforecast","EventId":{"Id":1001,"Name":"CandidatesFound"},"SourceContext":"Microsoft.AspNetCore.Routing.Matching.DfaMatcher","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.0888686Z","@mt":"Endpoint '{Endpoint}' with route pattern '{RoutePattern}' is valid for the request path '{Path}'","@l":"Debug","Endpoint":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RoutePattern":"WeatherForecast","Path":"/weatherforecast","EventId":{"Id":1005,"Name":"CandiateValid"},"SourceContext":"Microsoft.AspNetCore.Routing.Matching.DfaMatcher","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.0900570Z","@mt":"Request matched endpoint '{EndpointName}'","@l":"Debug","EndpointName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","EventId":{"Id":1,"Name":"MatchSuccess"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.0926848Z","@mt":"Executing endpoint '{EndpointName}'","EndpointName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.1036982Z","@mt":"Registered model binder providers, in the following order: {ModelBinderProviders}","@l":"Debug","ModelBinderProviders":["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinderProvider"],"EventId":{"Id":12,"Name":"RegisteredModelBinderProviders"},"SourceContext":"Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.1466813Z","@mt":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","RouteData":"{action = \"Get\", controller = \"WeatherForecast\"}","MethodInfo":"System.Collections.Generic.IEnumerable`1[LoggingSerilogDemo.WeatherForecast] Get()","Controller":"LoggingSerilogDemo.Controllers.WeatherForecastController","AssemblyName":"LoggingSerilogDemo","EventId":{"Id":3,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.1483643Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"authorization","Filters":["None"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.1486470Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"resource","Filters":["None"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.1494196Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"action","Filters":["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.1499603Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"exception","Filters":["None"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.1501920Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"result","Filters":["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.1512048Z","@mt":"Executing controller factory for controller {Controller} ({AssemblyName})","@l":"Debug","Controller":"LoggingSerilogDemo.Controllers.WeatherForecastController","AssemblyName":"LoggingSerilogDemo","EventId":{"Id":1,"Name":"ControllerFactoryExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.1517079Z","@mt":"Executed controller factory for controller {Controller} ({AssemblyName})","@l":"Debug","Controller":"LoggingSerilogDemo.Controllers.WeatherForecastController","AssemblyName":"LoggingSerilogDemo","EventId":{"Id":2,"Name":"ControllerFactoryExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.1987076Z","@mt":"Executing action method {ActionName} - Validation state: {ValidationState}","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","ValidationState":"Valid","EventId":{"Id":1,"Name":"ActionMethodExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.2055262Z","@mt":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","ActionResult":"Microsoft.AspNetCore.Mvc.ObjectResult","ElapsedMilliseconds":1.3687,"EventId":{"Id":2,"Name":"ActionMethodExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.2095834Z","@mt":"List of registered output formatters, in the following order: {OutputFormatters}","@l":"Debug","OutputFormatters":["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"],"EventId":{"Id":11,"Name":"RegisteredOutputFormatters"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.2123738Z","@mt":"No information found on request to perform content negotiation.","@l":"Debug","EventId":{"Id":4,"Name":"NoAcceptForNegotiation"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.2126161Z","@mt":"Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.","@l":"Debug","EventId":{"Id":8,"Name":"SelectingOutputFormatterWithoutUsingContentTypes"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.2131545Z","@mt":"Attempting to select the first formatter in the output formatters list which can write the result.","@l":"Debug","EventId":{"Id":10,"Name":"SelectingFirstCanWriteFormatter"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.2137829Z","@mt":"Selected output formatter '{OutputFormatter}' and content type '{ContentType}' to write the response.","@l":"Debug","OutputFormatter":"Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter","ContentType":"application/json","EventId":{"Id":2,"Name":"FormatterSelected"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.2143112Z","@mt":"Executing ObjectResult, writing value of type '{Type}'.","Type":"LoggingSerilogDemo.WeatherForecast[]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.2386347Z","@mt":"Executed action {ActionName} in {ElapsedMilliseconds}ms","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","ElapsedMilliseconds":80.1261,"EventId":{"Id":2,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7fb874f1-5400-4b85-b26e-9750bb9f1703","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.2422695Z","@mt":"Executed endpoint '{EndpointName}'","EndpointName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:53.2457046Z","@mt":"{HostingRequestFinishedLog:l}","@r":["Request finished in 194.9129ms 200 application/json; charset=utf-8"],"ElapsedMilliseconds":194.9129,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 194.9129ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HM4O55RCH1FB:00000001","RequestPath":"/weatherforecast","SpanId":"|62ff99f7-4e87ae964d81de75.","TraceId":"62ff99f7-4e87ae964d81de75","ParentId":""}
{"@t":"2020-12-04T07:51:57.3325699Z","@mt":"Application is shutting down...","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-12-04T07:51:57.3334053Z","@mt":"Hosting stopping","@l":"Debug","EventId":{"Id":3},"SourceContext":"Microsoft.Extensions.Hosting.Internal.Host"}
{"@t":"2020-12-04T07:51:57.3430433Z","@mt":"Connection id \"{ConnectionId}\" is closing.","@l":"Debug","ConnectionId":"0HM4O55RCH1FB","EventId":{"Id":36,"Name":"Http2ConnectionClosing"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T07:51:57.3465193Z","@mt":"Connection id \"{ConnectionId}\" is closed. The last processed stream ID was {HighestOpenedStreamId}.","@l":"Debug","ConnectionId":"0HM4O55RCH1FB","HighestOpenedStreamId":1,"EventId":{"Id":36,"Name":"Http2ConnectionClosed"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T07:51:57.3474811Z","@mt":"Connection id \"{ConnectionId}\" received FIN.","@l":"Debug","ConnectionId":"0HM4O55RCH1FB","EventId":{"Id":6,"Name":"ConnectionReadFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-12-04T07:51:57.3479784Z","@mt":"Connection id \"{ConnectionId}\" sending FIN because: \"{Reason}\"","@l":"Debug","ConnectionId":"0HM4O55RCH1FB","Reason":"The client closed the connection.","EventId":{"Id":7,"Name":"ConnectionWriteFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-12-04T07:51:57.3514033Z","@mt":"Connection id \"{ConnectionId}\" stopped.","@l":"Debug","ConnectionId":"0HM4O55RCH1FB","EventId":{"Id":2,"Name":"ConnectionStop"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T07:51:57.3531625Z","@mt":"Hosting stopped","@l":"Debug","EventId":{"Id":4},"SourceContext":"Microsoft.Extensions.Hosting.Internal.Host"}
{"@t":"2020-12-04T09:32:22.1467782Z","@mt":"Starting web host"}
{"@t":"2020-12-04T09:32:22.8904450Z","@mt":"Hosting starting","@l":"Debug","EventId":{"Id":1},"SourceContext":"Microsoft.Extensions.Hosting.Internal.Host"}
{"@t":"2020-12-04T09:32:23.0514135Z","@mt":"Failed to locate the development https certificate at '{certificatePath}'.","@l":"Debug","certificatePath":null,"EventId":{"Id":2,"Name":"FailedToLocateDevelopmentCertificateFile"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer"}
{"@t":"2020-12-04T09:32:23.9754865Z","@mt":"Using development certificate: {certificateSubjectName} (Thumbprint: {certificateThumbprint})","@l":"Debug","certificateSubjectName":"CN=localhost","certificateThumbprint":"B75C04C28BE608FCE8CAEB63B6C34D05FD05B9FF","EventId":{"Name":"LocatedDevelopmentCertificate"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer"}
{"@t":"2020-12-04T09:32:24.0111850Z","@mt":"Now listening on: {address}","address":"https://localhost:5001","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-12-04T09:32:24.0113349Z","@mt":"Now listening on: {address}","address":"http://localhost:5000","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-12-04T09:32:24.0116988Z","@mt":"Loaded hosting startup assembly {assemblyName}","@l":"Debug","assemblyName":"LoggingSerilogDemo","SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics"}
{"@t":"2020-12-04T09:32:24.0119498Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-12-04T09:32:24.0120637Z","@mt":"Hosting environment: {envName}","envName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-12-04T09:32:24.0121514Z","@mt":"Content root path: {contentRoot}","contentRoot":"C:\\Users\\ML\\source\\repos\\Personal-Learning-Library\\DotNetCoreDevelopmentActualCombat\\LoggingSerilogDemo","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-12-04T09:32:24.0123226Z","@mt":"Hosting started","@l":"Debug","EventId":{"Id":2},"SourceContext":"Microsoft.Extensions.Hosting.Internal.Host"}
{"@t":"2020-12-04T09:32:24.2151188Z","@mt":"Connection id \"{ConnectionId}\" received FIN.","@l":"Debug","ConnectionId":"0HM4O6U0TLHF0","EventId":{"Id":6,"Name":"ConnectionReadFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-12-04T09:32:24.2151163Z","@mt":"Connection id \"{ConnectionId}\" received FIN.","@l":"Debug","ConnectionId":"0HM4O6U0TLHF1","EventId":{"Id":6,"Name":"ConnectionReadFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-12-04T09:32:24.2244855Z","@mt":"Connection id \"{ConnectionId}\" accepted.","@l":"Debug","ConnectionId":"0HM4O6U0TLHF0","EventId":{"Id":39,"Name":"ConnectionAccepted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T09:32:24.2244855Z","@mt":"Connection id \"{ConnectionId}\" accepted.","@l":"Debug","ConnectionId":"0HM4O6U0TLHF1","EventId":{"Id":39,"Name":"ConnectionAccepted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T09:32:24.2253275Z","@mt":"Connection id \"{ConnectionId}\" started.","@l":"Debug","ConnectionId":"0HM4O6U0TLHF0","EventId":{"Id":1,"Name":"ConnectionStart"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T09:32:24.2253275Z","@mt":"Connection id \"{ConnectionId}\" started.","@l":"Debug","ConnectionId":"0HM4O6U0TLHF1","EventId":{"Id":1,"Name":"ConnectionStart"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T09:32:24.2430248Z","@mt":"Failed to authenticate HTTPS connection.","@l":"Debug","@x":"System.IO.IOException: Authentication failed because the remote party has closed the transport stream.\r\n   at System.Net.Security.SslStream.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessAuthentication(LazyAsyncResult lazyResult, CancellationToken cancellationToken)\r\n   at System.Net.Security.SslStream.BeginAuthenticateAsServer(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken, AsyncCallback asyncCallback, Object asyncState)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__69_0(SslServerAuthenticationOptions arg1, CancellationToken arg2, AsyncCallback callback, Object state)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\r\n   at System.Net.Security.SslStream.AuthenticateAsServerAsync(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.InnerOnConnectionAsync(ConnectionContext context)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware","ConnectionId":"0HM4O6U0TLHF1"}
{"@t":"2020-12-04T09:32:24.2430475Z","@mt":"Failed to authenticate HTTPS connection.","@l":"Debug","@x":"System.IO.IOException: Authentication failed because the remote party has closed the transport stream.\r\n   at System.Net.Security.SslStream.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessAuthentication(LazyAsyncResult lazyResult, CancellationToken cancellationToken)\r\n   at System.Net.Security.SslStream.BeginAuthenticateAsServer(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken, AsyncCallback asyncCallback, Object asyncState)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__69_0(SslServerAuthenticationOptions arg1, CancellationToken arg2, AsyncCallback callback, Object state)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\r\n   at System.Net.Security.SslStream.AuthenticateAsServerAsync(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.InnerOnConnectionAsync(ConnectionContext context)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware","ConnectionId":"0HM4O6U0TLHF0"}
{"@t":"2020-12-04T09:32:24.2789386Z","@mt":"Connection id \"{ConnectionId}\" stopped.","@l":"Debug","ConnectionId":"0HM4O6U0TLHF0","EventId":{"Id":2,"Name":"ConnectionStop"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T09:32:24.2789386Z","@mt":"Connection id \"{ConnectionId}\" stopped.","@l":"Debug","ConnectionId":"0HM4O6U0TLHF1","EventId":{"Id":2,"Name":"ConnectionStop"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T09:32:24.2818778Z","@mt":"Connection id \"{ConnectionId}\" sending FIN because: \"{Reason}\"","@l":"Debug","ConnectionId":"0HM4O6U0TLHF0","Reason":"The Socket transport's send loop completed gracefully.","EventId":{"Id":7,"Name":"ConnectionWriteFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-12-04T09:32:24.2818778Z","@mt":"Connection id \"{ConnectionId}\" sending FIN because: \"{Reason}\"","@l":"Debug","ConnectionId":"0HM4O6U0TLHF1","Reason":"The Socket transport's send loop completed gracefully.","EventId":{"Id":7,"Name":"ConnectionWriteFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-12-04T09:32:24.4996547Z","@mt":"Connection id \"{ConnectionId}\" accepted.","@l":"Debug","ConnectionId":"0HM4O6U0TLHF2","EventId":{"Id":39,"Name":"ConnectionAccepted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T09:32:24.5134032Z","@mt":"Connection id \"{ConnectionId}\" started.","@l":"Debug","ConnectionId":"0HM4O6U0TLHF2","EventId":{"Id":1,"Name":"ConnectionStart"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-12-04T09:32:24.6285515Z","@mt":"{HostingRequestStartingLog:l}","@r":["Request starting HTTP/2 GET https://localhost:5001/weatherforecast  "],"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5001","PathBase":"","Path":"/weatherforecast","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:5001/weatherforecast  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.6355590Z","@mt":"Wildcard detected, all requests with hosts will be allowed.","@l":"Debug","EventId":{"Name":"WildcardDetected"},"SourceContext":"Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.6677640Z","@mt":"{CandidateCount} candidate(s) found for the request path '{Path}'","@l":"Debug","CandidateCount":1,"Path":"/weatherforecast","EventId":{"Id":1001,"Name":"CandidatesFound"},"SourceContext":"Microsoft.AspNetCore.Routing.Matching.DfaMatcher","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.6718740Z","@mt":"Endpoint '{Endpoint}' with route pattern '{RoutePattern}' is valid for the request path '{Path}'","@l":"Debug","Endpoint":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RoutePattern":"WeatherForecast","Path":"/weatherforecast","EventId":{"Id":1005,"Name":"CandiateValid"},"SourceContext":"Microsoft.AspNetCore.Routing.Matching.DfaMatcher","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.6741529Z","@mt":"Request matched endpoint '{EndpointName}'","@l":"Debug","EndpointName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","EventId":{"Id":1,"Name":"MatchSuccess"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.6768155Z","@mt":"Executing endpoint '{EndpointName}'","EndpointName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.6891713Z","@mt":"Registered model binder providers, in the following order: {ModelBinderProviders}","@l":"Debug","ModelBinderProviders":["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinderProvider"],"EventId":{"Id":12,"Name":"RegisteredModelBinderProviders"},"SourceContext":"Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7344164Z","@mt":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","RouteData":"{action = \"Get\", controller = \"WeatherForecast\"}","MethodInfo":"System.Collections.Generic.IEnumerable`1[LoggingSerilogDemo.WeatherForecast] Get()","Controller":"LoggingSerilogDemo.Controllers.WeatherForecastController","AssemblyName":"LoggingSerilogDemo","EventId":{"Id":3,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7368061Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"authorization","Filters":["None"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7375438Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"resource","Filters":["None"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7382701Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"action","Filters":["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7391437Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"exception","Filters":["None"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7397884Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"result","Filters":["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7411941Z","@mt":"Executing controller factory for controller {Controller} ({AssemblyName})","@l":"Debug","Controller":"LoggingSerilogDemo.Controllers.WeatherForecastController","AssemblyName":"LoggingSerilogDemo","EventId":{"Id":1,"Name":"ControllerFactoryExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7421673Z","@mt":"Executed controller factory for controller {Controller} ({AssemblyName})","@l":"Debug","Controller":"LoggingSerilogDemo.Controllers.WeatherForecastController","AssemblyName":"LoggingSerilogDemo","EventId":{"Id":2,"Name":"ControllerFactoryExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7436521Z","@mt":"Get 随机创建数据","SourceContext":"LoggingSerilogDemo.Controllers.WeatherForecastController","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7468224Z","@mt":"List of registered output formatters, in the following order: {OutputFormatters}","@l":"Debug","OutputFormatters":["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"],"EventId":{"Id":11,"Name":"RegisteredOutputFormatters"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7608881Z","@mt":"No information found on request to perform content negotiation.","@l":"Debug","EventId":{"Id":4,"Name":"NoAcceptForNegotiation"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7615252Z","@mt":"Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.","@l":"Debug","EventId":{"Id":8,"Name":"SelectingOutputFormatterWithoutUsingContentTypes"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7621263Z","@mt":"Attempting to select the first formatter in the output formatters list which can write the result.","@l":"Debug","EventId":{"Id":10,"Name":"SelectingFirstCanWriteFormatter"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7634583Z","@mt":"Selected output formatter '{OutputFormatter}' and content type '{ContentType}' to write the response.","@l":"Debug","OutputFormatter":"Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter","ContentType":"application/json","EventId":{"Id":2,"Name":"FormatterSelected"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7645348Z","@mt":"Executing ObjectResult, writing value of type '{Type}'.","Type":"LoggingSerilogDemo.WeatherForecast[]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7825008Z","@mt":"Executed action {ActionName} in {ElapsedMilliseconds}ms","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","ElapsedMilliseconds":38.3027,"EventId":{"Id":2,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e30d45ad-9e27-46d1-9a3e-396574e405e1","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7870138Z","@mt":"Executed endpoint '{EndpointName}'","EndpointName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:32:24.7903851Z","@mt":"{HostingRequestFinishedLog:l}","@r":["Request finished in 163.7755ms 200 application/json; charset=utf-8"],"ElapsedMilliseconds":163.7755,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 163.7755ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HM4O6U0TLHF2:00000001","RequestPath":"/weatherforecast","SpanId":"|34d4c9cb-457547266e297ff9.","TraceId":"34d4c9cb-457547266e297ff9","ParentId":""}
{"@t":"2020-12-04T09:35:18.9556219Z","@mt":"Starting web host"}
{"@t":"2020-12-04T09:35:20.7288696Z","@mt":"Get 随机创建数据","SourceContext":"LoggingSerilogDemo.Controllers.WeatherForecastController","ActionId":"8ae433d5-61e1-489b-a6c2-0f8113abb124","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O6VLC783V:00000001","RequestPath":"/weatherforecast","SpanId":"|89d0ad4d-40493436dea92b80.","TraceId":"89d0ad4d-40493436dea92b80","ParentId":""}
{"@t":"2020-12-04T10:01:57.3426713Z","@mt":"Starting web host"}
{"@t":"2020-12-04T10:01:59.2823415Z","@mt":"Get 随机创建数据","SourceContext":"LoggingSerilogDemo.Controllers.WeatherForecastController","ActionId":"96a5ce45-5b2c-4ac2-a261-b3f5d0b70cce","ActionName":"LoggingSerilogDemo.Controllers.WeatherForecastController.Get (LoggingSerilogDemo)","RequestId":"0HM4O7EHND1CO:00000001","RequestPath":"/weatherforecast","SpanId":"|e5daa58a-4bb5cce69629ad25.","TraceId":"e5daa58a-4bb5cce69629ad25","ParentId":""}
